// via https://gist.github.com/terkel/4373420
@function nc-round-num ($number, $digits: 0, $mode: round) {
  $n: 1;
  // $number must be a number
  @if type-of($number) != number {
    @warn '#{ $number } is not a number.';
    @return $number;
  }
  // $digits must be a unitless number
  @if type-of($digits) != number {
    @warn '#{ $digits } is not a number.';
    @return $number;
  }
  @else if not unitless($digits) {
    @warn '#{ $digits } has a unit.';
    @return $number;
  }
  @for $i from 1 through $digits {
    $n: $n * 10;
  }
  @if $mode == round {
    @return round($number * $n) / $n;
  }
  @else if $mode == ceil {
    @return ceil($number * $n) / $n;
  }
  @else if $mode == floor {
    @return floor($number * $n) / $n;
  }
  @else {
    @warn '#{ $mode } is undefined keyword.';
    @return $number;
  }
}

// there should an overlay z-index and an overlay-content z-index
@function nc-z($level, $map: $nc-z-indexes) {
  @return map-get($map, $level);
}

// turn unit values into unitless
@function nc-strip-units($num) {
  @return $num / ($num * 0 + 1);
}

// convert px to em
@function nc-em($px, $context: $nc-default-font-size) {
  @if ($px == 0) { @return 0; }
  @return $px / $context * 1em;
}

// determine tooltip offset direction
@function nc-get-tooltip-offset-direction($pos) {
  $offset: 'top';
  @if ($pos == 'top' or $pos == 'bottom') {
    $offset: 'left';
  }
  @return $offset;
}

// calculate tooltip offset
@function nc-get-tooltip-offset($pos, $size) {
  $val: -($size / 2);
  @if ($pos == 'left') {
    $val: 0;
  }
  @return $val;
}


// deprecated
// responsive spacing based on established ratio
@function nc-increase-spacing($val) {
  @if ($val != 'auto') {
    @return $val * $nc-spacing-ratio;
  }
  @return $val;
}
